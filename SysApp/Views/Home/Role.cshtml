@model SysApp.Models.RoleModel
@{
    ViewBag.Title = "Role";
    Layout = "~/Views/Shared/_Master.cshtml";
}


<div class="row mt" style="min-height:100vh; !important">
    <div class="col-md-12">
        <div class="content-panel">
            <h3 style ="margin-left:20px">
                ROLES
                </h3>
                <h5>
                    <i class=" fa fa-search" style="float:left; margin-left:5px"></i>
                    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for Role.." size="30" style="float:left; margin-left:5px; max-width:200px">
                </h5>
                <button type="button" class="btn btn-theme03" onclick="toggle_hidden();" id="btn_delete" style="float:right; margin-right:10px">
                    <i class="fa fa-trash-o"></i> DELETE
                </button>
                <button class="btn btn-theme" data-toggle="modal" onclick="getPermissions();" data-target="#myModal" style="float:right; margin-right:10px">
                    <i class="fa fa-plus"></i>  ADD
                </button>
                <br />
                <br />
                <table class="table table-striped table-advance table-hover" id="tbl_roles">
                    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" id="btn_Close">&times;</button>
                                    <h4 class="modal-title" id="myModalLabel">Add Role</h4>
                                </div>
                                <div class="modal-body">

                                    <div class="form-group">
                                        <div class="col-sm-10">
                                            Enter Role: <input type="text" class="form-control" id="txbname">
                                        </div>
                                    </div>
                                    <br>
                                    <br><br> Please select permissions allowed for this role. <br><br>

                                    <div id="div_Permissions">

                                    </div>

                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-primary" onclick="SaveRole()" style="background:#219070" !important> Save Role</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <thead>
                        <tr>
                            <th onclick="sortTable(0)"><i class="fa fa-wrench"></i> Role</th>
                            <th onclick="sortTable(1)"><i class="fa fa-key"></i> Permissions</th>
                            <th class="isHidden"><i class="fa fa-exclamation"></i> Action</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var acc in Model.RoleList)
                        {
                            <tr>

                                <td>
                                    @acc.RoleName
                                </td>
                                <td>
                                    @acc.Permission
                                </td>
                                <td class="isHidden">
                                    <button id="@acc.RoleName" onclick="Delete_Row(this)" type="button" class="btn btn-theme04 btn-xs">Delete User</button>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
</div>
        <!-- /content-panel -->
    </div>
    <!-- /col-md-12 -->
</div>

<script type="text/javascript">
    $(document).ready(function () {
        document.getElementById("a_roles").classList.add("active");
    });

    function getPermissions() {
        let xhr = new XMLHttpRequest();
        let url = "/Home/GetPermission";
        xhr.open("GET", url, true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                var response = JSON.parse(this.responseText);
                console.log(response);
                var div = document.getElementById("div_Permissions");
                var Hold_CB = "";
                for (let x in response) {
                    Hold_CB = Hold_CB + '<label class="checkbox-inline">' +
                        '<input type="checkbox" id="' + response[x]['PID'] + '" value="' + response[x]['PID'] + '">' + response[x]['Pname'] +
                        '</label>'
                }
                div.innerHTML = Hold_CB


            }
        };
        // Sending data with the request
        xhr.send();
        return false;
    }

    function SaveRole() {
        if ($("#txbname").val() == "" || $("#txbname").val() == null) {
            popupMess("Add role error", "Please enter Role name");
            return
        }

        var selected = [];
        $('#div_Permissions input:checked').each(function () {
            selected.push($(this).attr('value'));
        });

        if (selected.length == 0) {
            popupMess("Add role error", "Please select atleast one permission");
            return
        }
        console.log(selected);
        var str = "[";
        for (i = 0; i < selected.length; i++) {
            //SaveRoletoDB($("#txbname").val(),selected[i]);
            if (i == 0) str = str + '{"item":"' + selected[i]+'"}';
            else str = str + ',{"item":"' + selected[i] + '"}';
        }
        str = str + "]";
        console.log(str);
        SaveRoletoDB($("#txbname").val(), str);
    }

    function SaveRoletoDB(role, permission) {
        //let xhr = new XMLHttpRequest();
        //let url = "/home/CreateRole";
        //xhr.open("POST", url, true);
        //xhr.setRequestHeader("Content-Type", "application/json");

        //xhr.onreadystatechange = function () {
        //    if (xhr.readyState === 4 && xhr.status === 200) {
        //        // Print received data from server
        //        console.log(this.responseText);
        //        location.reload()
        //    }
        //};
        ////var obj = JSON.parse(permission);
        ////console.log(obj);

        //var data = JSON.stringify({
        //    "role": role,
        //    "permission": permission
        //})
        //console.log(data);
        //xhr.send(data);
        console.log(JSON.stringify({ role: role, permission: JSON.parse(permission) }));

        $.ajax({
            type: "POST",
            url: "/home/CreateRole",
            dataType: "text",
            data: JSON.stringify({ role: role, permission: JSON.parse(permission)}),

            contentType: "application/json; charset=utf-8",
            success: function (response) {
                alert("Successfully Saved.");
                location.reload();
            },
            failure: function (response) {
                alert(response.responseText);
                location.reload();
            },
            error: function (response) {
                alert(response.responseText);
                location.reload();
            }

        });
    }

    function popupMess(ttl, msg) {
        var unique_id = $.gritter.add({
            title: ttl,
            // (string | mandatory) the text inside the notification
            text: msg,
            // (string | optional) the image to display on the left
            // (bool | optional) if you want it to fade out on its own or just sit there
            sticky: false,
            // (int | optional) the time you want it to be alive for before fading out
            time: 8000,
            // (string | optional) the class name you want to apply to that specific message
            class_name: 'my-sticky-class'
        });
    }

    //-----------------------DELETE FUNCTION-------------------
    function Delete_Row(btn) {
        $.ajax({
            type: "POST",
            url: "/home/DeleteRole",
            dataType: "text",
            data: JSON.stringify({ RoleName: btn.id }),

            contentType: "application/json; charset=utf-8",
            success: function (response) {
                alert("Successfully Deleted.");
                location.reload();
            },
            failure: function (response) {
                alert(response.responseText);
                location.reload();
            },
            error: function (response) {
                alert(response.responseText);
                location.reload();
            }

        });
    }

    function toggle_hidden() {
        if ($("#tbl_roles thead tr th").hasClass("isHidden")) {
            $("#tbl_roles tbody tr td:nth-child(3)").removeClass("isHidden");
            $("#tbl_roles thead tr th:nth-child(3)").removeClass("isHidden");
            $("#btn_delete").text("Hide delete buttons")
        }
        else {
            $("#tbl_roles tbody tr td:nth-child(3)").addClass("isHidden");
            $("#tbl_roles thead tr th:nth-child(3)").addClass("isHidden");
            $("#btn_delete").html('<i class="fa fa-trash-o"></i> DELETE')
        }

    }
    // ---------------------SORTING THE TABLE--------------------------
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("tbl_roles");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {

                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;

                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
    //---------------------SEARCH FUNCTION ------------------------------------//
    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("tbl_roles");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
<style>
    .isHidden {
        display: none
    }
</style>



